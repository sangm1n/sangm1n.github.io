<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Soft squared on sangminlog</title>
    <link>http://sangm1n.github.io/categories/soft-squared/</link>
    <description>Recent content in Soft squared on sangminlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://sangm1n.github.io/categories/soft-squared/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Soft squared - API에 대하여</title>
      <link>http://sangm1n.github.io/api/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/api/</guid>
      <description>API가 도대체 뭔데? 전공자로써 API라는 용어를 수도 없이 들었다. 심지어 졸업작품으로 진행했던 프로젝트에서 Google cloud vision API 를 가져다 썼었지만 정작 정확한 의미는 모르고 있었다.
위키백과에서는 API를 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스 라고 정의한다. 그렇게 와닿는 말은 아닌 것 같다. 이해하기 쉽도록 예시를 준비해봤다.
매개체 Application Programming Interface 에서 interface라는 단어에 초점을 맞춰보자. 직역하면 서로 맞대는 면 정도로 해석할 수 있다.</description>
    </item>
    
    <item>
      <title>Soft squared - DBMS에 대하여</title>
      <link>http://sangm1n.github.io/dbms/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/dbms/</guid>
      <description>3주차 수업은 DBMS에 관한 내용이었다. 개인적으로 2학년 데이터베이스 수업을 절어서(?) 잘 모르기도 하고, 꼭 한 번 제대로 파보고 싶었다.
해피 서버와 드림 서버 1주차에는 단순히 로컬에 서버를 구축했고, 2주차에는 클라이언트와 서버를 분리했다. 이번 3주차의 핵심은 서버단에서 DBMS와 DB를 분리하는 것이다.
초등학생 때 매일같이 했던 크레이지아케이드 게임에는 해피 서버와 드림 서버가 있다. 해피 서버 사용자와 드림 서버 사용자는 서로 만날 수가 없다. 어떤 로직 때문에 이렇게 됐을까?
Server program + Back-end Language + DBMS 서버단에 대한 설명에서 Server program / Back-end Language / DBMS 세 파트를 통틀어서 서버라고 불렀다.</description>
    </item>
    
    <item>
      <title>Soft squared - Network에 대하여</title>
      <link>http://sangm1n.github.io/network/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/network/</guid>
      <description>컴파일 설치와의 작별 소프트 스퀘어드 에서의 1주차 과제는 Linux 위에 APM을 컴파일 설치하여 서버를 구축하는 것이었다. 단순히 apt와 같은 패키지 매니저를 사용했으면 편했겠지만 컴파일 설치가 왜 중요한지, 어떨 때 사용하는지를 알 수 있었고 덕분에 CLI (Command-line interface) 환경에 조금 더 친숙해졌다.
어제 2주차 수업을 들으며 앞으로는 컴파일 설치를 하지 않아도 된다는 나름 희소식을 들었다.
스타벅스 가서 아메리카노 마실래 뚱딴지 같은 소리로 들릴 수도 있지만 2주차 Network 수업은 위의 문장으로 시작됐다. 결론부터 말하자면 아래의 설명을 쉽게 이해할 수 있도록 비유한 것이다.</description>
    </item>
    
    <item>
      <title>Soft squared - Server에 대하여</title>
      <link>http://sangm1n.github.io/server-intro/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/server-intro/</guid>
      <description>Soft squared를 시작하며 드디어 오늘 Soft squared 서버반 첫 수업을 시작했다. 예전부터 막연하게 백엔드 공부를 해보고 싶었다. 혼자 책보며 공부하는 것보다는 배우면서 실습도 해볼 수 있는 프로그램이 있나 찾아보다가 소프트 스퀘어드를 알게 되었다. 막학기 개강과 동시에 소프트 스퀘어드 서버반 등록을 했고 방금 막 첫 수업을 듣고 왔다.
그래서 서버가 뭔데? 네트워크와 같은 과목을 공부하다 보면 위의 사진을 쉽게 접했을 것이다. 사진을 보면 client가 서버에 요청을 하고 server는 요청에 해당하는 작업을 수행해서 응답하는 모습을 보인다.</description>
    </item>
    
  </channel>
</rss>
