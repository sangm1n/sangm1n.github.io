<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on sangminlog</title>
    <link>http://sangm1n.github.io/categories/til/</link>
    <description>Recent content in TIL on sangminlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://sangm1n.github.io/categories/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TIL - 2020-10-09</title>
      <link>http://sangm1n.github.io/til/2020-10-09/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/til/2020-10-09/</guid>
      <description>💪 Today I Learned Support Vector Machine  경계에 있는 몇 개의 점으로 hyperplane 찾음 차원(kernel) 늘리기  이번주 딥러닝/클라우드 수업 내용은 SVM이었다.
🏃 한마디 </description>
    </item>
    
    <item>
      <title>TIL - 2020-10-08</title>
      <link>http://sangm1n.github.io/til/2020-10-08/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/til/2020-10-08/</guid>
      <description>💪 Today I Learned 탄력적 IP  고정된 IP 주소  AWS에서 탄력적 IP (EIP, Elastic IP)를 할당할 수 있다. AWS 인스턴스의 퍼블릭 IP는 유동적인 IP 주소이기 때문에 인스턴스를 중지하고 다시 시작할 경우 해당 IP 주소가 변경된다. 따라서 실제 서비스를 만들고자 할 때 유동 IP를 사용해서는 안된다.
이럴 때 사용하는 것이 고정 IP이다. 단, EIP는 유료 서비스이므로 항상 주의하자.
phpmyadmin VS mysql workbench  둘 다 mysql 접근  소프트 스퀘어드 2주차 과제를 진행하며 phpmyadmin과 mysql workbench를 사용하여 mysql에 외부 접속을 해봤다.</description>
    </item>
    
    <item>
      <title>TIL - 2020-10-07</title>
      <link>http://sangm1n.github.io/til/2020-10-07/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/til/2020-10-07/</guid>
      <description>💪 Today I Learned rDBMS  테이블 간 관계가 형성된 데이터베이스  나는 사실 디비를 잘 모른다. 2학년 1학기 때 수업을 듣긴 했는데 공부를 안하기도 했고, 그 이후 프로젝트 진행할 때도 다루지를 않았다. 연구실에서 데이터 분석 공부를 할 때 필요성을 느꼈고 꼭 배워보고 싶었는데 드디어 제대로 해볼 기회가 생겼다.
위에서 정의했듯이 rDB는 테이블 간 관계가 형성된 데이터베이스를 뜻한다. 이것을 관리하는 rDBMS의 예로는 MySQL / postgreSQL / Oracle 등이 있다.
데이터 모델링  정제된 데이터를 만들기 위한 과정  SQL은 항상 정제된 데이터를 필요로 한다.</description>
    </item>
    
    <item>
      <title>TIL - 2020-10-06</title>
      <link>http://sangm1n.github.io/til/2020-10-06/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/til/2020-10-06/</guid>
      <description>💪 Today I Learned Apache VS Nginx  Apache : MPM 방식, 스레드/프로세스 기반 구조 Nginx : 비동기 Event-Driven 기반 구조  발표 자료 만들다가 문득 궁금해져서 찾아봤다. 2주에 걸쳐 서버 프로그램으로 apache와 nginx를 사용했는데 정작 둘의 차이점은 모르고 있었다. 그래서 오늘 포스팅에 간략하게나마 정리했다. 간단하게 동시 접속 요청이 많을 경우 nginx를 사용하면 될 것 같다.
hard link VS symbolic link (soft link)  hard link : 원본 파일과 동일한 inode를 가진다.</description>
    </item>
    
    <item>
      <title>TIL - 2020-10-05</title>
      <link>http://sangm1n.github.io/til/2020-10-05/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/til/2020-10-05/</guid>
      <description>💪 Today I Learned AWS 서버 도메인 적용  가비아 도메인 구매 http://sangmini.site  가비아에서 도메인을 하나 구매했다. 무료 도메인을 쓰고 싶었으나 소프트 스퀘어드 수업에서 별로 비싸지 않으니까 아까워하지 말라더라. (1900원/년 이면 진짜 싸긴 싸다)
구매한 도메인을 AWS 서버에 적용했다. 서버 프로그램으로 nginx를 사용 중인데, server block에 해당 도메인을 추가하는 것으로 쉽게 적용할 수 있었다.
https 적용  certbot 이용 (with letsencrypt)  나중에 모의 외주를 하거나 실제 외주를 진행할 때 https 적용은 필수라고 한다.</description>
    </item>
    
    <item>
      <title>TIL 다시 시작하기</title>
      <link>http://sangm1n.github.io/til/2020-10-04/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/til/2020-10-04/</guid>
      <description>Restart 올해 7월 14일부터 이전 블로그에 TIL을 작성하기 시작했다. 그곳에서의 기록이 9월 19일에 멈췄기 때문에 3주 정도 TIL 작성을 쉬었다. 원래 이 블로그를 만들자마자 다시 시작할 계획이었는데 이런 저런 핑계로 미루게 되었다. 추석 연휴도 끝났으니 더는 미루면 안되겠다고 판단했다.
TIL 규칙 정하기 기존에 나는 아래 사진처럼 Today I Learned / Tomorrow I will Learn 두 파트로 작성해왔다. 애초에 블로그에 많은 시간을 투자하지 않기 위해 &amp;ldquo;기록만 하자&amp;rdquo; 라는 마인드로 진행했는데 지금 보니 턱없이 부실해 보인다.</description>
    </item>
    
  </channel>
</rss>
