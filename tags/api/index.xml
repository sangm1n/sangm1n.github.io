<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API on sangminlog</title>
    <link>http://sangm1n.github.io/tags/api/</link>
    <description>Recent content in API on sangminlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://sangm1n.github.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RESTful한 API 설계하기</title>
      <link>http://sangm1n.github.io/restapi/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/restapi/</guid>
      <description>이전 포스팅에서 API가 무엇인지 간략하게 알아봤다. 소프트 스퀘어드 4주차 과제는 이러한 API를 REST하게 설계하는, 즉 RESTful API를 만드는 것이다. 설계에 앞서 REST API 가 무엇인지 제대로 알고 싶어 정리했다.
REST API REpresentational State Transfer 의 약자로 2000년도에 Roy Fielding 박사 논문에서 최초로 소개되었다. 로이 필딩은 HTTP 주요 저자 중 한 사람으로 웹의 장점을 최대한 활용할 수 있는 아키텍처로써 REST를 발표했다고 한다.
REST 구성  자원(Resource) : URI 행위(Verb) : HTTP Method 표현(Representations)  쉽게 말해 REST는 URI를 통해 자원을 표시하고, HTTP Method를 이용해 자원의 행위를 규정하여 그 결과를 받는 것을 말한다.</description>
    </item>
    
    <item>
      <title>Soft squared - API에 대하여</title>
      <link>http://sangm1n.github.io/api/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/api/</guid>
      <description>전공자로써 API라는 용어를 수도 없이 들었다. 심지어 졸업작품으로 진행했던 프로젝트에서 Google cloud vision API 를 가져다 썼었지만 정작 정확한 의미는 모르고 있었다.
API가 도대체 뭔데? 위키백과에서는 API를 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스 라고 정의한다. 그렇게 와닿는 말은 아닌 것 같다. 이해하기 쉽도록 예시를 준비해봤다.
매개체 Application Programming Interface 에서 interface라는 단어에 초점을 맞춰보자. 직역하면 서로 맞대는 면 정도로 해석할 수 있다.</description>
    </item>
    
  </channel>
</rss>
