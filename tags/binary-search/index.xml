<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary-search on sangminlog</title>
    <link>http://sangm1n.github.io/tags/binary-search/</link>
    <description>Recent content in Binary-search on sangminlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://sangm1n.github.io/tags/binary-search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>［알고리즘 / Algorithm］ 다양한 그래프 이론 알고리즘</title>
      <link>http://sangm1n.github.io/graph-algorithm/</link>
      <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/graph-algorithm/</guid>
      <description>이전 포스팅인 DFS/BFS와 최단 경로에서 다룬 내용도 그래프 알고리즘의 한 유형이다. 문제를 접했을 때 서로 다른 개체가 연결되어 있다는 이야기를 들으면 가장 먼저 그래프 알고리즘을 떠올려야 한다.
그래프 알고리즘에 앞서 트리 자료구조에 대해 간략히 짚고 넘어가겠다. 트리는 그래프의 일종으로 여러 노드가 한 노드를 가리킬 수 없는 구조이다.
    그래프 트리     방향성 방향 그래프 혹은 무방향 그래프 방향 그래프   순환성 순환 및 비순환 비순환   루트 노드 존재하지 않음 존재함   노드간 관계성 부모와 자식 관계 없음 부모와 자식 관게   모델 종류 네트워크 모델 계층 모델    Graph Algorithm 그래프는 주로 두 가지 방식으로 구현한다.</description>
    </item>
    
    <item>
      <title>［알고리즘 / Algorithm］ 범위를 좁혀가는 이진 탐색</title>
      <link>http://sangm1n.github.io/binary-search-algorithm/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/binary-search-algorithm/</guid>
      <description>Search Algorithm 이진 탐색에 앞서 순차 탐색에 대해 먼저 이해할 필요가 있다.
Sequential Search 순차 탐색이란 리스트 안의 특정한 데이터를 찾기 위해 맨 앞에서부터 하나씩 확인하는 방법을 뜻한다. 이는 보통 정렬되어 있지 않은 리스트에서 많이 사용하는데, 데이터가 아무리 많아도 시간만 충분하다면 항상 원하는 데이터를 찾을 수 있다.
이처럼 데이터 정렬 여부와 관계없이 항상 맨 앞에서부터 확인하기 때문에 시간복잡도는 O(N) 이다.
Binary Search 반면 이진 탐색은 정렬된 데이터의 탐색 범위를 반씩 좁혀가며 확인한다.</description>
    </item>
    
  </channel>
</rss>
