<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coding test on sangminlog</title>
    <link>http://sangm1n.github.io/tags/coding-test/</link>
    <description>Recent content in coding test on sangminlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://sangm1n.github.io/tags/coding-test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>이코테 - 미래 도시</title>
      <link>http://sangm1n.github.io/problem-solving/ct-future-city/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-future-city/</guid>
      <description>미래 도시 이것이 취업을 위한 코딩 테스트다
문제 방문 판매원 A는 많은 회사가 모여 있는 공중 미래 도시에 있다. 공중 미래 도시에는 1번부터 N번까지의 회사가 있는데 특정 회사끼리는 서로 도로를 통해 연결되어 있다.
방문 판매원 A는 현재 1번 회사에 위치해 있으며, X번 회사에 방문해 물건을 판매하고자 한다. 공중 미래 도시에서 특정 회사에 도착하기 위한 방법은 회사끼리 연결되어 있는 도로를 이용하는 방법이 유일하다.
또한 연결된 2개의 회사는 양방향으로 이동할 수 있다. 공중 미래 도시에서의 도로는 마하의 속도로 사람을 이동시켜주기 때문에 특정 회사와 다른 회사가 연결되어 있다면, 정확히 1만큼의 시간으로 이동할 수 있다.</description>
    </item>
    
    <item>
      <title>이코테 - 전보</title>
      <link>http://sangm1n.github.io/problem-solving/ct-message/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-message/</guid>
      <description>전보 이것이 취업을 위한 코딩 테스트다
문제 어떤 나라에는 N개의 도시가 있다. 그리고 각 도시는 보내고자 하는 메시지가 있는 경우, 다른 도시로 전보를 보내 해당 메시지를 전송할 수 있다.
하지만 X라는 도시에서 Y라는 도시로 전보를 보내고자 한다면, 도시 X에서 Y로 향하는 통로가 설치되어 있어야 한다. 예를 들어 X에서 Y로 향하는 통로는 있지만, Y에서 X로 향하는 통로가 없다면 Y는 X로 메시지를 보낼 수 없다. 또한 통로를 거쳐 메시지를 보낼 때는 일정 시간이 소요된다.</description>
    </item>
    
    <item>
      <title>이코테 - 1로 만들기</title>
      <link>http://sangm1n.github.io/problem-solving/ct-make-one/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-make-one/</guid>
      <description>1로 만들기 이것이 취업을 위한 코딩 테스트다
문제 정수 X가 주어질 때 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지이다.
 X가 5로 나누어 떨어지면, 5로 나눈다. X가 3으로 나누어 떨어지면, 3으로 나눈다. X가 2로 나누어 떨어지면, 2로 나눈다. X에서 1을 뺀다.  정수 X가 주어졌을 때, 연산 4개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
코드 한마디 DP table을 이용해 Bottom-up 방식으로 풀면 된다.</description>
    </item>
    
    <item>
      <title>이코테 - 개미 전사</title>
      <link>http://sangm1n.github.io/problem-solving/ct-ant-warrior/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-ant-warrior/</guid>
      <description>개미 전사 이것이 취업을 위한 코딩 테스트다
문제 개미 전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하려고 한다. 메뚜기 마을에는 여러 개의 식량창고가 있는데 식량창고는 일직선으로 이어져 있다.
각 식량창고에는 정해진 수의 식량을 저장하고 있으며 개미 전사는 식량창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다. 이때 메뚜기 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있다.
따라서 개미 전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다.</description>
    </item>
    
    <item>
      <title>이코테 - 바닥 공사</title>
      <link>http://sangm1n.github.io/problem-solving/ct-floor-construct/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-floor-construct/</guid>
      <description>바닥 공사 이것이 취업을 위한 코딩 테스트다
문제 가로의 길이가 N, 세로의 길이가 2인 직사각형 형태의 얇은 바닥이 있다.
이 얇은 바닥을 1 X 2의 덮개, 2 X 1의 덮개, 2 X 2의 덮개를 이용해 채우고자 한다.
이때 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오.
예를 들어 2 X 3 크기의 바닥을 채우는 경우의 수는 5가지이다.
코드 한마디 다이나믹 프로그래밍의 근본적인 예제라고 할 수 있는 타일링 문제 유형이다.</description>
    </item>
    
    <item>
      <title>이코테 - 효율적인 화폐 구성</title>
      <link>http://sangm1n.github.io/problem-solving/ct-efficient-money/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-efficient-money/</guid>
      <description>효율적인 화폐 구성 이것이 취업을 위한 코딩 테스트다
문제 N가지 종류의 화폐가 있다.
이 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 M원이 되도록 하려고 한다.
이때 각 화폐는 몇 개라도 사용할 수 있으며, 사용한 화폐의 구성은 같지만 순서만 다른 것은 같은 경우로 구분한다.
예를 들어 2원, 3원 단위의 화폐가 있을 때는 15원을 만들기 위해 3원을 5개 사용하는 것이 가장 최소한의 화폐 개수이다.
코드 한마디 DP 문제들 점화식 짜는 게 굉장히 어려운 것 같다.</description>
    </item>
    
    <item>
      <title>이코테 - 떡볶이 떡 만들기</title>
      <link>http://sangm1n.github.io/problem-solving/ct-rice-cake/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-rice-cake/</guid>
      <description>떡볶이 떡 만들기 이것이 취업을 위한 코딩 테스트다
문제 오늘은 떡볶이 떡을 만드는 날이다. 떡볶이 떡의 길이가 일정하지 않지만 한 봉지 안에 들어가는 떡의 총 길이는 절단기로 잘라 맞춘다.
절단기에 높이(H)를 지정하면 줄지어진 떡을 한 번에 절단한다. 높이가 H보다 긴 떡은 H 위의 부분이 잘릴 것이고, 낮은 떡은 잘리지 않는다.
예를 들어 높이가 19, 14, 10, 17cm인 떡이 나란히 있고 절단기 높이를 15cm로 지정하면 자른 뒤 떡의 높이는 15, 14, 10, 15cm가 될 것이다.</description>
    </item>
    
    <item>
      <title>이코테 - 미로 탈출</title>
      <link>http://sangm1n.github.io/problem-solving/ct-escape-maze/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-escape-maze/</guid>
      <description>미로 탈출 이것이 취업을 위한 코딩 테스트다
문제 N X M 미로에는 여러 마리의 괴물이 있어 이를 피해 탈출해야 한다.
사용자의 위치는 (1, 1)이고 미로의 출구는 (N, M)의 위치에 존재하며 한 번에 한 칸씩 이동할 수 있다.
이때 괴물이 있는 부분은 0으로, 괴물이 없는 부분은 1로 표시되어 있다.
미로는 반드시 탈출할 수 있는 형태로 제시된다. 사용자가 탈출하기 위해 움직여야 하는 최소 칸의 개수를 구하시오.
칸을 셀 때는 반드시 시작 칸과 마지막 칸을 모두 포함해서 계산한다.</description>
    </item>
    
    <item>
      <title>이코테 - 음료수 얼려 먹기</title>
      <link>http://sangm1n.github.io/problem-solving/ct-ice-beverage/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-ice-beverage/</guid>
      <description>음료수 얼려 먹기 이것이 취업을 위한 코딩 테스트다
문제 N X M 크기의 얼음 틀이 있다. 구멍이 뚫려 있는 부분은 0, 칸막이가 존재하는 부분은 1로 표시된다.
구멍이 뚫려 있는 부분끼리 상, 하, 좌, 우로 붙어 있는 경우 서로 연결되어 있는 것으로 간주한다.
이때 얼음 틀의 모양이 주어졌을 때 생성되는 총 아이스크림의 개수를 구하는 프로그램을 작성하시오.
코드 한마디 재귀를 이용한 DFS 알고리즘으로 쉽게 풀 수 있는 문제이다.</description>
    </item>
    
    <item>
      <title>이코테 - 게임 개발</title>
      <link>http://sangm1n.github.io/problem-solving/ct-game-development/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-game-development/</guid>
      <description>게임 개발 이것이 취업을 위한 코딩 테스트다
문제 게임 캐릭터가 맵 안에서 움직이는 시스템이 있다.
캐릭터가 있는 장소는 1 X 1 크기의 정사각형으로 이뤄진 N X M 크기의 직사각형으로, 각각의 칸은 육지 또는 바다이다. 캐릭터는 동서남북 중 한 곳을 바라본다.
맵의 각 칸은 (A, B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수, B는 서쪽으로부터 떨어진 칸의 개수이다.
캐릭터는 상하좌우로 움직일 수 있고, 바다로 되어 있는 공간에는 갈 수 없다. 움직임을 위한 매뉴얼은 다음과 같다.</description>
    </item>
    
    <item>
      <title>이코테 - 왕실의 나이트</title>
      <link>http://sangm1n.github.io/problem-solving/ct-royal-knight/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://sangm1n.github.io/problem-solving/ct-royal-knight/</guid>
      <description>왕실의 나이트 이것이 취업을 위한 코딩 테스트다
문제 왕실 정원은 체스판과 같은 8 X 8 좌표 평면이다. 왕실 정원의 특정한 한 칸에 나이트가 서 있다.
나이트는 말을 타고 있기 때문에 이동을 할 때는 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없다.
나이트는 특정한 위치에서 다음과 같은 2가지 경우로 이동할 수 있다.
 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기  이처럼 좌표 평면상 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의 수를 구하시오.</description>
    </item>
    
  </channel>
</rss>
